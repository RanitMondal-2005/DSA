# Finding no of conncted components in a Graph
n=8
edges=[(0,1),(0,2),(0,3),(1,2),(4,5),(6,7)]
adj_list=[]
for i in range(n):
    adj_list.append([])
for edge in edges:
    u=edge[0]
    v=edge[1]
    adj_list[u].append(v)
    adj_list[v].append(u)
print("Adjacency List is: ")
for i in range(n):
    print(i,"->",adj_list[i])

visited=[False]*n
# to calculate no of connected components in a graph we need to call DFS , cause individually call will be made for all components and it will count the disconnected ones

def dfs(i,adj_list,visited,ans):
    visited[i]=True
    ans.append(i)
    for x in adj_list[i]:
        if not visited[x]:
            dfs(x,adj_list,visited,ans)
c=0 # to count no of connected components
all_components=[]
for i in range(n):
    ans=[]
    if not visited[i]:
        dfs(i,adj_list,visited,ans)
        all_components.append(ans)
        c+=1
print("Total no of connected components=",c)
print("All the components are: ",all_components)
