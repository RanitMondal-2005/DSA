class Solution:
    def countHillValley(self, nums: List[int]) -> int:
        c=0
        cleaned_nums=[nums[0]]
        for i in range(1,len(nums)):
            if nums[i-1]!=nums[i]:
                cleaned_nums.append(nums[i])
        n=len(cleaned_nums)
        i=0 # for left neighbor
        j=1 # for right neighbor
        while j<n-1:
            if (cleaned_nums[i]<cleaned_nums[j] and cleaned_nums[j]>cleaned_nums[j+1]) or (cleaned_nums[i]>cleaned_nums[j] and cleaned_nums[j]<cleaned_nums[j+1]):
                c+=1
                i=j # closest non equal element  , if i do i+=1 it will be non closest for some cases 
            j+=1
        return c
        # since we made a cleaned array no need of 2 pointer , just do it using for loop with 1 pointer , like compare j with j-1 and j+1 ...
